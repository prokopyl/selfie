error[E0277]: the trait bound `UnstableInt: stable_deref_trait::StableDeref` is not satisfied
  --> tests/compile_fail/unstable_deref.rs:18:59
   |
18 |     let data: Selfie<UnstableInt, Ref<i32>> = Selfie::new(int, |i| i);
   |                                               ----------- ^^^ expected an implementor of trait `stable_deref_trait::StableDeref`
   |                                               |
   |                                               required by a bound introduced by this call
   |
note: required by a bound in `Selfie::<'a, P, R>::new`
  --> src/selfie.rs
   |
   | impl<'a, P: StableDeref + 'a, R: for<'this> RefType<'this> + ?Sized> Selfie<'a, P, R> {
   |             ^^^^^^^^^^^ required by this bound in `Selfie::<'a, P, R>::new`
help: consider borrowing here
   |
18 |     let data: Selfie<UnstableInt, Ref<i32>> = Selfie::new(&int, |i| i);
   |                                                           +
18 |     let data: Selfie<UnstableInt, Ref<i32>> = Selfie::new(&mut int, |i| i);
   |                                                           ++++

error[E0599]: the method `referential` exists for struct `Selfie<'_, UnstableInt, selfie::refs::Ref<i32>>`, but its trait bounds were not satisfied
   --> tests/compile_fail/unstable_deref.rs:20:27
    |
6   | struct UnstableInt(pub i32);
    | ---------------------------- doesn't satisfy `UnstableInt: stable_deref_trait::StableDeref`
...
20  |     assert_eq!(&42, *data.referential());
    |                           ^^^^^^^^^^^ private field, not a method
    |
    = note: the following trait bounds were not satisfied:
            `UnstableInt: stable_deref_trait::StableDeref`
note: the following trait must be implemented
   --> $CARGO/stable_deref_trait-1.2.0/src/lib.rs
    |
    | pub unsafe trait StableDeref: Deref {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0599]: the method `referential` exists for struct `Box<Selfie<'_, UnstableInt, selfie::refs::Ref<i32>>>`, but its trait bounds were not satisfied
   --> tests/compile_fail/unstable_deref.rs:23:27
    |
6   | struct UnstableInt(pub i32);
    | ---------------------------- doesn't satisfy `UnstableInt: stable_deref_trait::StableDeref`
...
23  |     assert_eq!(&42, *data.referential());
    |                           ^^^^^^^^^^^ private field, not a method
    |
    = note: the following trait bounds were not satisfied:
            `UnstableInt: stable_deref_trait::StableDeref`
note: the following trait must be implemented
   --> $CARGO/stable_deref_trait-1.2.0/src/lib.rs
    |
    | pub unsafe trait StableDeref: Deref {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
